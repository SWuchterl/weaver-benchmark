selection:
   ### use `&`, `|`, `~` for logical operations on numpy arrays
   ### can use functions from `math`, `np` (numpy), and `awkward` in the expression
   >-
   (np.abs(jet_eta)<2.5) & (jet_pt>=250) & (jet_pt<=5000) & (event%7!=0) & (jet_genmatch_pt>0) & (jet_mass_truth>=10) & (jet_mass_truth<=220) &
   (((jet_flav_2prong_partonjet_match==-1) & (jet_tauflav==0) & (jet_muflav==0) & (jet_elflav==0)) |
    ((jet_flav_2prong_partonjet_match==-1) & (jet_lepflav>=1)) | 
    ((jet_flav_2prong_partonjet_match==1)  & (jet_tauflav==0) & (jet_muflav==0) & (jet_elflav==2)) |
    ((jet_flav_2prong_partonjet_match==2)  & (jet_tauflav==0) & (jet_muflav==2) & (jet_elflav==0)) |
    ((jet_flav_2prong_partonjet_match>=2)  & (jet_flav_2prong_partonjet_match<=6) & (jet_tauflav==0) & (jet_muflav==0) & (jet_elflav==0)) |
    ((jet_flav_2prong_partonjet_match==7)  & (jet_tauflav==2) & (jet_muflav==0) & (jet_elflav==0)) |
    ((jet_flav_2prong_partonjet_match==7)  & (jet_tauflav==1) & (jet_muflav==1) & (jet_elflav==0)) |
    ((jet_flav_2prong_partonjet_match==7)  & (jet_tauflav==1) & (jet_muflav==0) & (jet_elflav==1)))


test_time_selection:
   >-
   (np.abs(jet_eta)<2.5) & (jet_pt>=250) & (jet_pt<=5000) & (event%7==0) & (jet_genmatch_pt>0) & (jet_mass_truth>=10) & (jet_mass_truth<=220) &
   (((jet_flav_2prong_partonjet_match==-1) & (jet_tauflav==0) & (jet_muflav==0) & (jet_elflav==0)) |
    ((jet_flav_2prong_partonjet_match==-1) & (jet_lepflav>=1)) |
    ((jet_flav_2prong_partonjet_match==1)  & (jet_tauflav==0) & (jet_muflav==0) & (jet_elflav==2)) |
    ((jet_flav_2prong_partonjet_match==2)  & (jet_tauflav==0) & (jet_muflav==2) & (jet_elflav==0)) |
    ((jet_flav_2prong_partonjet_match>=2)  & (jet_flav_2prong_partonjet_match<=6) & (jet_tauflav==0) & (jet_muflav==0) & (jet_elflav==0)) |
    ((jet_flav_2prong_partonjet_match==7)  & (jet_tauflav==2) & (jet_muflav==0) & (jet_elflav==0)) |
    ((jet_flav_2prong_partonjet_match==7)  & (jet_tauflav==1) & (jet_muflav==1) & (jet_elflav==0)) |
    ((jet_flav_2prong_partonjet_match==7)  & (jet_tauflav==1) & (jet_muflav==0) & (jet_elflav==1)))

new_variables:
   ### [format] name: formula
   ### can use functions from `math`, `np` (numpy), and `awkward` in the expression
   pfcand_mask: ak.ones_like(jet_pfcand_deta)
   sv_mask: ak.ones_like(jet_sv_deta)
   lt_mask: ak.ones_like(jet_losttrack_deta)
   jet_pfcand_p4: _p4_from_ptetaphie(jet_pfcand_pt,jet_pfcand_eta,jet_pfcand_phi,jet_pfcand_energy)
   jet_pfcand_px: jet_pfcand_p4.px
   jet_pfcand_py: jet_pfcand_p4.py
   jet_pfcand_pz: jet_pfcand_p4.pz
   jet_sv_p4: _p4_from_ptetaphie(jet_sv_pt,jet_sv_eta,jet_sv_phi,jet_sv_energy)
   jet_sv_px: jet_sv_p4.px
   jet_sv_py: jet_sv_p4.py
   jet_sv_pz: jet_sv_p4.pz
   jet_losttrack_p4: _p4_from_ptetaphie(jet_losttrack_pt,jet_losttrack_eta,jet_losttrack_phi,jet_losttrack_energy)
   jet_losttrack_px: jet_losttrack_p4.px
   jet_losttrack_py: jet_losttrack_p4.py
   jet_losttrack_pz: jet_losttrack_p4.pz
   label_H_te: (jet_flav_2prong_partonjet_match==7) & (jet_tauflav==1) & (jet_muflav==0) & (jet_elflav==1)
   label_H_tm: (jet_flav_2prong_partonjet_match==7) & (jet_tauflav==1) & (jet_muflav==1) & (jet_elflav==0)
   label_H_tt: (jet_flav_2prong_partonjet_match==7) & (jet_tauflav==2) & (jet_muflav==0) & (jet_elflav==0)
   label_H_mm: (jet_flav_2prong_partonjet_match==2) & (jet_tauflav==0) & (jet_muflav==2) & (jet_elflav==0)
   label_H_ee: (jet_flav_2prong_partonjet_match==1) & (jet_tauflav==0) & (jet_muflav==0) & (jet_elflav==2)
   label_H_bb: (jet_flav_2prong_partonjet_match==6) & (jet_tauflav==0) & (jet_muflav==0) & (jet_elflav==0)
   label_H_cc: (jet_flav_2prong_partonjet_match==5) & (jet_tauflav==0) & (jet_muflav==0) & (jet_elflav==0)
   label_H_qq: (jet_flav_2prong_partonjet_match==4) & (jet_tauflav==0) & (jet_muflav==0) & (jet_elflav==0)
   label_H_gg: (jet_flav_2prong_partonjet_match==3) & (jet_tauflav==0) & (jet_muflav==0) & (jet_elflav==0)
   label_lept: (jet_flav_2prong_partonjet_match==-1) & (jet_lepflav>=1)
   label_QCD_2hf: (jet_flav_2prong_partonjet_match==-1) & (jet_tauflav==0) & (jet_muflav==0) & (jet_elflav==0) & ((jet_nbhad>=2) | ((jet_nbhad==0) & (jet_nchad>=2)))
   label_QCD_1hf: (jet_flav_2prong_partonjet_match==-1) & (jet_tauflav==0) & (jet_muflav==0) & (jet_elflav==0) & ((jet_nbhad==1) | ((jet_nbhad==0) & (jet_nchad==1))) 
   label_QCD_0hf: (jet_flav_2prong_partonjet_match==-1) & (jet_tauflav==0) & (jet_muflav==0) & (jet_elflav==0) & (jet_nbhad==0) & (jet_chad==0)

preprocess:
   ### method: [manual, auto] - whether to use manually specified parameters for variable standardization
   method: manual
   ### data_fraction: fraction of events to use when calculating the mean/scale for the standardization
   data_fraction:

inputs:
   pf_features:
      length: 100
      pad_mode: wrap
      vars:
         ### [format 1]: var_name (no transformation)
         ### [format 2]: [var_name,
         ### subtract_by(optional, default=None, no transf. if preprocess.method=manual, auto transf. if preprocess.method=auto),
         ### multiply_by(optional, default=1),
         ### clip_min(optional, default=-5),
         ### clip_max(optional, default=5),
         ### pad_value(optional, default=0)]
         - [jet_pfcand_pt_log, 1, 0.5, -10, 10]
         - [jet_pfcand_energy_log, 1, 0.5, -10, 10]
         - [jet_pfcand_eta, 0, 0.5, -5, 5]
         - [jet_pfcand_deta, 0, 1, -1, 1]
         - [jet_pfcand_dphi, 0, 1, -1, 1]
         - [jet_pfcand_charge, 0, 1, -2, 2]
         - [jet_pfcand_frompv, 2, 1, -5, 5]
         - [jet_pfcand_nlostinnerhits, null]
         - [jet_pfcand_track_chi2, 1, 0.2]
         - [jet_pfcand_track_qual, 0, 0.2]
         - [jet_pfcand_dz, 0, 0.1, -20, 20]
         - [jet_pfcand_dzsig, 0, 0.01, -1, 50]
         - [jet_pfcand_dxy, 0, 0.25, -25, 25]
         - [jet_pfcand_dxysig, 0, 0.01, -1, 50]
         - [jet_pfcand_etarel, 1.5, 0.5, -5, 5]
         - [jet_pfcand_pperp_ratio, 0, 1, 0, 10]
         - [jet_pfcand_ppara_ratio, 0, 1, 0, 1]
         - [jet_pfcand_trackjet_d3d, 0, 0.1, -10, 10]
         - [jet_pfcand_trackjet_d3dsig, 0, 0.005, -1, 50]
         - [jet_pfcand_trackjet_dist, 0, 0.1, 0, 10]
         - [jet_pfcand_trackjet_decayL, 0, 0.01, -5, 5]
         - [jet_pfcand_npixhits, 0, 0.1, -1, 5]
         - [jet_pfcand_nstriphits, 0, 0.1, -1, 5]
         - [jet_pfcand_id, 2, 0.2, -5, 5]
         - [jet_pfcand_tau_signal, 0, 1, 0, 1]
         - [jet_pfcand_hcalfraction, 0, 1, 0, 1]
         - [jet_pfcand_calofraction, 0, 1, 0, 5]
         - [jet_pfcand_muon_isglobal, 0, 1, -5, 5]
         - [jet_pfcand_muon_chi2,  1, 0.2, -5, 10]
         - [jet_pfcand_muon_segcomp, 0, 1, -5, 5]
         - [jet_pfcand_muon_nvalidhit, 0, 1, -1, 50]
         - [jet_pfcand_muon_nstation, 0, 1, -1, 10]
         - [jet_pfcand_electron_detaIn, 0, 25, -5, 5]
         - [jet_pfcand_electron_dphiIn, 0, 25, -5, 5]
         - [jet_pfcand_electron_sigIetaIeta, 0.002, 50, -1, 5]
         - [jet_pfcand_electron_sigIphiIphi, 0.001, 100, -1, 10]
         - [jet_pfcand_electron_r9, 0, 1, -1, 2]
         - [jet_pfcand_electron_convProb, 0, 1, -2, 2]
         - [jet_pfcand_photon_sigIetaIeta, 0.002, 50, -1, 5]
         - [jet_pfcand_photon_r9, 0, 1, -1, 2]
         - [jet_pfcand_photon_eVeto, 0, 1, -1, 1]
   pf_vectors:
      length: 100
      pad_mode: wrap
      vars:
         - [jet_pfcand_px, null]
         - [jet_pfcand_py, null]
         - [jet_pfcand_pz, null]
         - [jet_pfcand_energy, null]
   pf_mask:
      length: 100
      vars:
         - [pfcand_mask, null]
   sv_features:
      length: 5
      vars:
         - [jet_sv_pt_log, 3, 0.5, -5, 5]
         - [jet_sv_mass, 1., 0.25, -1, 5]
         - [jet_sv_deta, 0, 1, -1, 1]
         - [jet_sv_dphi, 0, 1, -1, 1]
         - [jet_sv_ntrack, 3, 1, -5, 20]
         - [jet_sv_chi2, 0, 0.25, -0.001, 2.5]
         - [jet_sv_dxy, 0.2, 0.25, -5, 5]
         - [jet_sv_dxysig, 0, 0.01, -1, 5]
         - [jet_sv_d3d, 0.5, 0.2, -5, 5]
         - [jet_sv_d3dsig, 0, 0.01, -1, 5]
   sv_vectors:
      length: 5
      pad_mode: wrap
      vars:
         - [jet_sv_px, null]
         - [jet_sv_py, null]
         - [jet_sv_pz, null]
         - [jet_sv_energy, null]    
   sv_mask:
      length: 5
      vars:
         - [sv_mask, null]
   lt_features:
      length: 5
      vars:
         - [jet_losttrack_pt_log, 1, 0.5, -10, 10]
         - [jet_losttrack_eta, 0, 0.5, -5, 5]
         - [jet_losttrack_deta, 0, 1, -1, 1]
         - [jet_losttrack_dphi, 0, 1, -1, 1]
         - [jet_losttrack_charge, 0, 1, -2, 2]
         - [jet_losttrack_frompv, 2, 1, -5, 5]
         - [jet_losttrack_dz, 0, 0.1, -20, 20]
         - [jet_losttrack_dzsig, 0, 0.01, -1, 50]
         - [jet_losttrack_dxy, 0, 0.25, -25, 25]
         - [jet_losttrack_dxysig, 0, 0.01, -1, 50]
         - [jet_losttrack_etarel, 1.5, 0.5, -5, 5]
         - [jet_losttrack_track_chi2, 1, 0.2, -5, 10]
         - [jet_losttrack_track_qual, 0, 0.2, -5, 10]
         - [jet_losttrack_trackjet_d3d, 0, 0.1, -10, 10]
         - [jet_losttrack_trackjet_d3dsig, 0, 0.005, -1, 50]
         - [jet_losttrack_trackjet_dist, 0, 0.1, 0, 10]
         - [jet_losttrack_trackjet_decayL, 0, 0.01, -5, 5]
         - [jet_losttrack_npixhits, 0, 0.1, -1, 5]
         - [jet_losttrack_nstriphits, 0, 0.1, -1, 5]
   lt_vectors:
      length: 5
      pad_mode: wrap
      vars:
         - [jet_losttrack_px, null]
         - [jet_losttrack_py, null]
         - [jet_losttrack_pz, null]
         - [jet_losttrack_energy, null]
   lt_mask:
      length: 5
      vars:
         - [lt_mask, null]
labels:
   ### type can be `simple`, `custom`
   ### [option 1] use `simple` for binary/multi-class classification, then `value` is a list of 0-1 labels
   type: simple
   value: [label_H_tt, label_H_tm, label_H_te, label_H_mm, label_H_ee, label_H_bb, label_H_cc, label_H_qq, label_H_gg, label_lept, label_QCD_2hf, label_QCD_1hf, label_QCD_0hf]
   ### [option 2] otherwise use `custom` to define the label, then `value` is a map
   # type: custom
   # value:

targets:
    type: custom
    value:
      target_mass: (np.clip(((label_H_bb) | (label_H_cc) | (label_H_qq) | (label_H_gg))*np.nan_to_num(jet_mass_truth/jet_mass,nan=0,posinf=0,neginf=0)+((label_H_tt) | (label_H_tm) | (label_H_te) | (label_lept) | (label_QCD_2hf) | (label_QCD_1hf) | (label_QCD_0hf))*np.nan_to_num(jet_mass_truth_vis/jet_mass,nan=0,posinf=0,neginf=0),0.2,2.))
      target_mass_q16: (np.clip(((label_H_bb) | (label_H_cc) | (label_H_qq) | (label_H_gg))*np.nan_to_num(jet_mass_truth/jet_mass,nan=0,posinf=0,neginf=0)+((label_H_tt) | (label_H_tm) | (label_H_te) | (label_lept) | (label_QCD_2hf) | (label_QCD_1hf) | (label_QCD_0hf))*np.nan_to_num(jet_mass_truth_vis/jet_mass,nan=0,posinf=0,neginf=0),0.2,2.))
      target_mass_q84: (np.clip(((label_H_bb) | (label_H_cc) | (label_H_qq) | (label_H_gg))*np.nan_to_num(jet_mass_truth/jet_mass,nan=0,posinf=0,neginf=0)+((label_H_tt) | (label_H_tm) | (label_H_te) | (label_lept) | (label_QCD_2hf) | (label_QCD_1hf) | (label_QCD_0hf))*np.nan_to_num(jet_mass_truth_vis/jet_mass,nan=0,posinf=0,neginf=0),0.2,2.))
    quantile:
       [-1,0.16,0.84]

observers:
   - event
   - rho
   - npv
   - wgt
   - met
   - npu
   - sample
   - jet_pt
   - jet_pt_raw
   - jet_eta
   - jet_phi
   - jet_mass
   - jet_mass_raw
   - jet_ncand
   - jet_hflav
   - jet_pflav
   - jet_muflav
   - jet_elflav
   - jet_tauflav
   - jet_lepflav
   - jet_genmatch_pt
   - jet_genmatch_eta
   - jet_genmatch_phi
   - jet_genmatch_mass
   - jet_genmatch_wnu_pt
   - jet_genmatch_wnu_eta
   - jet_genmatch_wnu_phi
   - jet_genmatch_wnu_mass
   - jet_softdrop_pt
   - jet_softdrop_eta
   - jet_softdrop_phi
   - jet_softdrop_mass
   - jet_softdrop_genmatch_pt
   - jet_softdrop_genmatch_eta
   - jet_softdrop_genmatch_phi
   - jet_softdrop_genmatch_mass
   - jet_pt_truth
   - jet_eta_truth
   - jet_phi_truth
   - jet_mass_truth
   - jet_pt_truth_vis
   - jet_eta_truth_vis
   - jet_phi_truth_vis
   - jet_mass_truth_vis
   - jet_pnet_probHbb
   - jet_pnet_probHcc
   - jet_pnet_probHqq
   - jet_pnet_probQCDbb
   - jet_pnet_probQCDb
   - jet_pnet_probQCDcc
   - jet_pnet_probQCDc
   - jet_pnet_probQCDothers
   - jet_pnet_regmass
   - jet_pnetlast_probHbb
   - jet_pnetlast_probHcc
   - jet_pnetlast_probHqq
   - jet_pnetlast_probHgg
   - jet_pnetlast_probQCD0hf
   - jet_pnetlast_probQCD1hf
   - jet_pnetlast_probQCD2hf
   - jet_pnetlast_probHmm
   - jet_pnetlast_probHee
   - jet_pnetlast_probHtt
   - jet_pnetlast_probHtm
   - jet_pnetlast_probHte
   - jet_pnetlast_masscorr
   - jet_flav_2prong_partonjet_match
   - jet_flav_2prong_parton_match

monitor_variables:

weights:
   ### [option 1] use precomputed weights stored in the input files
   # use_precomputed_weights: true
   # weight_branches: [weight, class_weight]
   ### [option 2] compute weights on-the-fly using reweighting histograms
   use_precomputed_weights: false
   reweight_method: flat
   reweight_vars:
      jet_pt: [250, 315, 396, 499, 628, 791, 995, 1253, 1577, 1987, 5000]
      jet_soft_drop_mass: [10,35,55,65,85,105,125,145,165,220]
   reweight_classes: [label_H_tt, label_H_tm, label_H_te, label_H_mm, label_H_ee, label_H_bb, label_H_cc, label_H_qq, label_H_gg, label_lept, label_QCD_2hf, label_QCD_1hf, label_QCD_0hf]
   class_weights: [2.0, 2.0, 2.0, 1.5, 1.5, 2.0, 2.0, 1.5, 1.5, 2.0, 1.0, 2.0, 3.0]
   reweight_threshold: 15
   reweight_hists:
